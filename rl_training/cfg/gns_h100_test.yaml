# gns_h100_test.yaml - 2-step test with optimized H100 batch sizes
# Testing 50% batch size increases with 2 steps and buffer_size=64

# Model configuration 
backbone: Qwen/Qwen2.5-1.5B
eval_backbone: qwen2_5_15

# -------------- Rollout Collection (50% increase: 24→36) ---------------- #

# Batch sizes for generation (50% increase based on 50% peak memory usage)
rollout_batch_size: 36        # Increased from 24 (50% boost)
num_generations: 8            # Keep at 8

# VLLM disabled due to dependency conflicts
use_vllm: false
vllm_reload_every: 5
vllm_gpu_memory_utilization: 0.35

# Teacher-forcing configuration (50% increase: 16→24)
tf_micro_batch: 24            # Increased from 16 (50% boost)

# Data saving
save_rollouts_every: 0        # 0 = never save

# -------------- Training Configuration (50% increase: 4→6) ---------------- #

# Buffer and batch sizes 
buffer_size: 64               # As requested
microbatch_size: 6            # Increased from 4 (50% boost)
# grad_accum_steps = buffer_size / (world_size * microbatch_size) = 64 / (1 * 6) = 10.67 → 11

# PPO configuration
ppo_epochs: 1                 # Single epoch per buffer
max_new_tokens: 100           # Keep same
temperature: 0.7              # Sampling temperature

# Evaluation configuration
eval_frac: 0.01               # Small fraction for testing
eval_batch_size: 64           # Keep evaluation batch size
eval_temperature: 0.7

# Reward configuration
reward_var_thresh: 0.01
reject_all_zero: true
reject_all_max: true

reward_fns:
  - tag_pref                  # Primary reward function

# Scheduler configuration
scheduler:
  name: mix_passrate
  dataset_name: gsm8k_r1_template
  split: "train"
  ema_alpha: 0.01
  boundaries: [0.2, 0.8]
  sample_weights: [1, 1, 1]

# ------------------ GRPO Trainer Configuration ---------------- #

# Learning rate and optimization
lr: 1.0e-6                    # Learning rate
clip_eps: 0.2                 # PPO clipping epsilon
clip_+: 0.2                   # Asymmetric clipping
cfg["kl_beta"]: 0.0           # KL penalty (0 = compute for logging only)
ent_coef: 0.0                 # Entropy coefficient
grad_clip: 1.0                # Gradient clipping norm

# Training settings
bf16: true                    # Use bfloat16 precision
gradient_checkpointing: true
lr_scheduler: "const"         # Constant learning rate

# Checkpoint configuration
save_every: 1                 # Save every step for 2-step test
total_steps: 2                # 2 steps for testing optimized batch sizes

# -------------- Diagnostic Probes ---------------- #

# Gradient Noise Scale probe (ENABLED - main focus)
gns_probe:
  enabled: true               # Enable GNS probe for batch size testing
  window_size: 8              # Smaller window for 2-step test
  ema_alpha: 0.1              # EMA smoothing factor
  debug: true                 # Print debug information

# Simple Entropy Probe (DISABLED as requested)
simple_entropy_probe:
  enabled: false              # Disabled for GNS-only testing
  debug: false
  preconditioning_mode: "previous_step"
  log_every: 1

# Complex Entropy Probe (DISABLED)
entropy_probe:
  enabled: false              # Disable expensive computation
  debug: false